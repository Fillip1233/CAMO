=====================Starting experiment Currin_Condis trail#1=====================
Initialize BO on Currin_Condis
  - Global optimum = 13.79
  - Cost = [1. 1. 1. 1. 2. 3. 3. 5. 6. 7.]
  - Init cost = 90.0
    * debug = [1.18940853]
    * debug = [1.18940853]
  - iter #0
    * simple optimum = [1.18940853]
    * infere optimum = [1.18940802]
    * Fstar = [22.829103, 19.081537, 19.478039, 19.645763, 23.41463, 19.940456, 22.743061, 19.061136, 21.44322, 21.67314]
    * mean Fstar = 20.93101
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [1.9073486e-06 1.7881393e-07 2.2649765e-06 8.1062317e-06 1.7881393e-07
 1.8370152e-04 2.8957129e-03 3.7225008e-02 1.5008140e-01 1.5443370e+00]
    * cost so far: 97.0
    * time spent = 1287.8639233112335
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #1
    * simple optimum = [1.18940853]
    * infere optimum = [3.009]
    * Fstar = [21.960316, 44.975803, 43.684288, 39.296864, 35.792336, 32.2052, 36.035072, 39.206894, 34.543873, 30.366177]
    * mean Fstar = 35.806683
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [2.3841858e-07 2.3841858e-06 1.0609627e-05 1.1920929e-07 8.1062317e-05
 4.7683716e-07 2.9127598e-03 2.2876859e-02 1.5008783e-01 1.5443370e+00]
    * cost so far: 104.0
    * time spent = 1300.9511001110077
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #2
    * simple optimum = [1.18940853]
    * infere optimum = [3.009]
    * Fstar = [47.11396, 32.490467, 23.907892, 22.503141, 35.479122, 43.07094, 25.70471, 16.036581, 33.01452, 21.478506]
    * mean Fstar = 30.079987
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [2.3841858e-07 1.4305115e-06 1.7881393e-07 2.0742416e-05 3.0398369e-05
 1.5156269e-03 2.8676987e-03 3.7226677e-02 1.5008378e-01 1.5443370e+00]
    * cost so far: 111.0
    * time spent = 1318.5779793262482
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #3
    * simple optimum = [1.18940853]
    * infere optimum = [3.009]
    * Fstar = [22.587395, 31.180035, 16.988138, 30.260988, 30.433027, 22.088322, 15.330292, 25.639187, 26.72143, 20.701298]
    * mean Fstar = 24.193012
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [3.5762787e-07 2.3841858e-07 2.3841858e-07 1.7881393e-07 3.5357475e-04
 4.1365623e-04 2.9075146e-03 3.6692262e-02 1.5008116e-01 1.5443370e+00]
    * cost so far: 118.0
    * time spent = 1319.2473390102386
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #4
    * simple optimum = [1.18940853]
    * infere optimum = [3.009]
    * Fstar = [20.624437, 29.416496, 29.950468, 23.324734, 21.990093, 24.378344, 34.424137, 28.64036, 36.782864, 30.221605]
    * mean Fstar = 27.975353
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [1.1920929e-07 1.7881393e-06 5.7220459e-06 3.0994415e-06 3.5202503e-04
 1.3245344e-03 1.3147593e-03 3.6719203e-02 1.4995778e-01 1.5443370e+00]
    * cost so far: 125.0
    * time spent = 1382.0836765766144
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #5
    * simple optimum = [1.18940853]
    * infere optimum = [3.009]
    * Fstar = [11.285563, 13.607313, 16.097076, 18.334738, 13.108869, 17.396357, 17.02904, 16.498226, 13.378734, 20.86476]
    * mean Fstar = 15.760068
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [1.1920929e-07 2.8610229e-06 1.7046928e-05 5.9604645e-08 2.5379658e-04
 4.6026707e-04 2.9100180e-03 3.7225127e-02 1.5008569e-01 1.5443370e+00]
    * cost so far: 132.0
    * time spent = 1338.3104195594788
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #6
    * simple optimum = [1.18940853]
    * infere optimum = [3.009]
    * Fstar = [14.851471, 19.016932, 20.742134, 21.533802, 21.115252, 21.921799, 22.441341, 17.766598, 18.210758, 16.772928]
    * mean Fstar = 19.4373
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [2.3841858e-07 4.1723251e-06 2.7418137e-06 4.9710274e-05 1.3756752e-04
 1.0296106e-03 2.7204752e-03 3.6728263e-02 1.5008116e-01 1.5443370e+00]
    * cost so far: 139.0
    * time spent = 1348.6554143428802
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #7
    * simple optimum = [1.18940853]
    * infere optimum = [3.009]
    * Fstar = [26.740433, 20.093472, 28.860292, 25.93113, 31.628828, 21.441393, 26.778357, 21.508728, 17.90453, 21.32662]
    * mean Fstar = 24.221378
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [1.1920929e-07 4.7683716e-07 2.3841858e-07 5.1975250e-05 3.1828880e-05
 1.3484955e-03 6.7949295e-06 3.6720395e-02 1.4995646e-01 1.5443370e+00]
    * cost so far: 146.0
    * time spent = 1366.788106918335
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #8
    * simple optimum = [1.18940853]
    * infere optimum = [3.009]
    * Fstar = [26.963203, 25.534573, 22.922577, 21.73654, 20.302412, 16.4462, 24.59743, 26.893724, 24.208672, 23.433058]
    * mean Fstar = 23.303837
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [4.7683716e-07 3.5762787e-07 9.5367432e-07 5.7220459e-05 1.1920929e-07
 1.5081167e-03 1.1444092e-05 3.6748648e-02 1.5009499e-01 1.5443370e+00]
    * cost so far: 153.0
    * time spent = 1393.7032923698425
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #9
    * simple optimum = [1.18940853]
    * infere optimum = [3.009]
    * Fstar = [20.323717, 19.781696, 19.023945, 19.746977, 22.438816, 23.550224, 16.816235, 22.081276, 14.549116, 21.983448]
    * mean Fstar = 20.029545
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [1.4305115e-06 9.4175339e-06 6.1988831e-06 6.6995621e-05 2.1457672e-06
 1.5068054e-03 7.1525574e-07 3.7225962e-02 1.5008187e-01 1.5443370e+00]
    * cost so far: 160.0
    * time spent = 1387.8580198287964
 Finished trial, time spent = 269.9421474933624

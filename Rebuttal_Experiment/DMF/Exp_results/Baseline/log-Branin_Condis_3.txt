=====================Starting experiment Branin_Condis trail#1=====================
Initialize BO on Branin_Condis
  - Global optimum = 54.75
  - Cost = [1. 1. 1. 1. 2. 3. 3. 5. 6. 7.]
  - Init cost = 97.0
    * debug = [55.60211239]
    * debug = [55.60211239]
  - iter #0
    * simple optimum = [55.60211239]
    * infere optimum = [39.85211259]
    * Fstar = [68.196434, 64.55754, 63.979004, 65.0206, 65.27027, 65.59848, 66.86465, 62.9702, 64.26719, 65.3272]
    * mean Fstar = 65.205154
    * argmax: m = 6 argx= [[-1.6045779 -2.2765594]] info gain = [1.1920929e-06 4.7683716e-07 3.5762787e-07 3.5762787e-07 4.7683716e-07
 2.4557114e-05 3.1406641e-02 3.5762787e-07 5.9494972e-02 0.0000000e+00]
    * cost so far: 100.0
    * time spent = 22495.08872771263
    * debug = [39.85211259]
    * debug = [39.85211259]
  - iter #1
    * simple optimum = [55.60211239]
    * infere optimum = [39.85211259]
    * Fstar = [75.77336, 73.27654, 74.52787, 72.30303, 72.12981, 71.40923, 76.0002, 74.37221, 77.37834, 72.14338]
    * mean Fstar = 73.9314
    * argmax: m = 4 argx= [[-1.6045779  1.6442987]] info gain = [1.4305115e-06 4.7683716e-07 4.7683716e-07 5.9604645e-07 2.8462172e-02
 1.1062622e-03 3.9136648e-02 4.7683716e-07 5.9494972e-02 5.9604645e-08]
    * cost so far: 102.0
    * time spent = 1719.5046174526215
    * debug = [39.85211259]
    * debug = [39.85211259]
  - iter #2
    * simple optimum = [55.60211239]
    * infere optimum = [39.85211264]
    * Fstar = [72.6648, 70.37786, 69.478134, 73.5255, 71.899086, 70.94666, 67.87472, 74.16812, 70.160446, 70.15915]
    * mean Fstar = 71.12545
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [ 1.4305115e-06  7.1525574e-07  7.1525574e-07 -1.1920929e-07
  9.5367432e-07  2.3841858e-06  3.1406641e-02  2.3841858e-07
  2.8422356e-02  8.4561503e-01]
    * cost so far: 109.0
    * time spent = 1719.631020784378
    * debug = [39.85487648]
    * debug = [39.85487648]
  - iter #3
    * simple optimum = [55.60211239]
    * infere optimum = [55.24523459]
    * Fstar = [77.28156, 79.06333, 72.569374, 77.138115, 74.945755, 81.01123, 78.02296, 78.0087, 74.85381, 72.86949]
    * mean Fstar = 76.57643
    * argmax: m = 6 argx= [[-1.6045779  1.6442987]] info gain = [1.4305115e-06 4.7683716e-07 4.7683716e-07 1.1920929e-06 3.5762787e-07
 1.4305115e-06 3.9626122e-02 9.5367432e-07 5.9494972e-02 5.9604645e-08]
    * cost so far: 112.0
    * time spent = 1727.6382672786713
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #4
    * simple optimum = [55.60211239]
    * infere optimum = [55.60211264]
    * Fstar = [95.34677, 97.61063, 97.7216, 95.55798, 96.597885, 96.961296, 93.819695, 90.97055, 97.41141, 104.7326]
    * mean Fstar = 96.67304
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [1.0132790e-06 9.5367432e-07 1.8119812e-05 3.5762787e-07 7.1525574e-07
 1.1920929e-07 3.1406641e-02 7.1525574e-07 1.3113022e-06 8.4561503e-01]
    * cost so far: 119.0
    * time spent = 1761.9743738174438
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #5
    * simple optimum = [55.60211239]
    * infere optimum = [55.60211264]
    * Fstar = [92.978645, 98.578636, 99.25947, 96.315475, 95.857635, 96.03066, 100.65245, 98.79709, 97.24217, 96.92889]
    * mean Fstar = 97.264114
    * argmax: m = 6 argx= [[-1.5890326  1.6410602]] info gain = [1.7285347e-06 3.5762787e-07 7.1525574e-07 8.3446503e-07 7.9653263e-03
 1.9788742e-05 3.9690256e-02 8.3446503e-07 5.9494972e-02 0.0000000e+00]
    * cost so far: 122.0
    * time spent = 1804.4881143569946
    * debug = [55.60211239]
    * debug = [55.60211239]
  - iter #6
    * simple optimum = [55.60211239]
    * infere optimum = [55.60211264]
    * Fstar = [96.652824, 94.48452, 94.36004, 93.40933, 94.38423, 98.082184, 94.6644, 98.196526, 97.26422, 97.27549]
    * mean Fstar = 95.87738
    * argmax: m = 8 argx= [[-1.6045779 -2.2765594]] info gain = [9.4175339e-06 3.5762787e-07 3.5762787e-07 5.9604645e-07 4.7683716e-06
 1.3828278e-05 3.5762787e-07 8.3446503e-07 5.9494972e-02 5.9604645e-08]
    * cost so far: 128.0
    * time spent = 1855.939118862152
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #7
    * simple optimum = [55.60211239]
    * infere optimum = [55.60211264]
    * Fstar = [85.90752, 88.3576, 91.52008, 86.14322, 86.962524, 88.75603, 90.34365, 89.95069, 89.13602, 85.01322]
    * mean Fstar = 88.20905
    * argmax: m = 6 argx= [[-1.6045779  1.5584198]] info gain = [1.0728836e-06 5.9604645e-07 9.5367432e-07 4.7683716e-07 7.9653263e-03
 1.4305115e-06 3.9134502e-02 7.1525574e-07 5.9494972e-02 5.9604645e-08]
    * cost so far: 131.0
    * time spent = 1914.9204308986664
    * debug = [55.60211264]
    * debug = [55.60211264]
  - iter #8
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [86.55618, 84.46492, 84.8381, 81.5487, 86.52463, 84.16006, 83.772026, 92.02624, 86.30903, 86.2678]
    * mean Fstar = 85.646774
    * argmax: m = 6 argx= [[-1.6045779 -2.2765594]] info gain = [1.50203705e-05 4.50611115e-05 4.76837158e-07 9.53674316e-07
 7.96532631e-03 3.57627869e-07 3.14066410e-02 4.76837158e-07
 5.94949722e-02 0.00000000e+00]
    * cost so far: 134.0
    * time spent = 1933.3606071472168
    * debug = [55.60211264]
    * debug = [55.60211264]
  - iter #9
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [124.163734, 118.82415, 115.26335, 118.01392, 119.625946, 112.564156, 119.40442, 117.582596, 120.77162, 118.01656]
    * mean Fstar = 118.42305
    * argmax: m = 9 argx= [[-1.6045779 -2.2765594]] info gain = [2.1457672e-06 5.9604645e-07 4.7683716e-07 5.9604645e-07 4.7683716e-07
 8.3446503e-07 3.1406641e-02 5.9604645e-07 5.9494972e-02 2.7387512e-01]
    * cost so far: 141.0
    * time spent = 1951.8868336677551
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #10
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [122.351776, 118.01254, 117.26856, 117.70772, 119.39547, 119.86881, 120.40082, 116.256195, 117.10603, 121.42836]
    * mean Fstar = 118.97963
    * argmax: m = 6 argx= [[-1.5865927  1.6400067]] info gain = [7.1525574e-07 5.9604645e-07 1.6689301e-06 8.3446503e-07 7.9653263e-03
 3.5762787e-07 3.9680719e-02 5.9604645e-07 5.9494972e-02 0.0000000e+00]
    * cost so far: 144.0
    * time spent = 1978.652720451355
    * debug = [55.60211264]
    * debug = [55.60211264]
  - iter #11
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [122.348915, 120.445244, 122.695175, 122.62771, 125.33015, 124.46179, 123.33611, 125.0202, 119.49707, 118.77443]
    * mean Fstar = 122.453674
    * argmax: m = 9 argx= [[-1.6045779 -2.2765594]] info gain = [2.0265579e-06 3.2186508e-06 7.1525574e-07 7.1525574e-07 4.7683716e-07
 2.3841858e-07 3.9626122e-02 8.3446503e-07 5.9494972e-02 2.7387512e-01]
    * cost so far: 151.0
    * time spent = 1989.9425921440125
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #12
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [105.54461, 104.93465, 112.27195, 106.48395, 101.37008, 106.46561, 110.10098, 109.14692, 108.98393, 110.225975]
    * mean Fstar = 107.55287
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [1.1920929e-06 4.7683716e-07 3.5762787e-07 7.1525574e-07 2.8462172e-02
 9.5367432e-07 3.1406641e-02 3.5762787e-07 2.8422356e-02 8.4561503e-01]
    * cost so far: 158.0
    * time spent = 1997.9620509147644
    * debug = [55.60211264]
    * debug = [55.60211264]
  - iter #13
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [117.93737, 120.303825, 120.438385, 119.175644, 114.84022, 122.700905, 117.74981, 120.2182, 114.97376, 116.90285]
    * mean Fstar = 118.52409
    * argmax: m = 9 argx= [[-1.6045779 -2.2765594]] info gain = [2.0265579e-06 8.3446503e-07 3.5762787e-07 8.3446503e-07 7.9653263e-03
 5.9604645e-07 2.3841858e-07 2.3841858e-07 5.9494972e-02 2.7387512e-01]
    * cost so far: 165.0
    * time spent = 2071.3173291683197
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #14
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [116.51185, 114.70645, 118.653656, 113.77927, 116.10999, 115.13805, 116.97465, 111.8893, 110.39235, 114.78881]
    * mean Fstar = 114.89443
    * argmax: m = 4 argx= [[-1.6045779  1.6442987]] info gain = [5.2452087e-06 6.0319901e-05 3.5762787e-07 5.9604645e-07 2.8462172e-02
 9.5367432e-07 3.9626122e-02 3.5762787e-07 5.9494972e-02 1.1920929e-07]
    * cost so far: 167.0
    * time spent = 2296.891949892044
    * debug = [55.60211264]
    * debug = [55.60211264]
  - iter #15
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [105.24911, 105.693214, 104.70767, 106.31255, 106.89032, 107.859474, 105.6452, 103.50087, 106.40632, 105.32612]
    * mean Fstar = 105.75908
    * argmax: m = 8 argx= [[-1.6045779 -2.2765594]] info gain = [1.6331673e-05 5.9604645e-07 7.1525574e-07 9.5367432e-07 4.7683716e-07
 7.1525574e-07 5.9604645e-07 7.1525574e-07 5.9494972e-02 5.9604645e-08]
    * cost so far: 173.0
    * time spent = 3605.6164140701294
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #16
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [93.72958, 99.12586, 98.24302, 91.522095, 95.12265, 95.67467, 92.555534, 92.39244, 93.58582, 95.513756]
    * mean Fstar = 94.74654
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [5.9604645e-07 1.1920929e-04 3.5762787e-07 3.5762787e-07 2.3841858e-07
 0.0000000e+00 3.1406641e-02 5.9604645e-07 5.9494972e-02 8.4561503e-01]
    * cost so far: 180.0
    * time spent = 1994.2901298999786
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #17
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [94.23383, 97.94714, 94.775604, 95.84657, 96.62399, 96.914925, 99.38268, 96.820145, 97.799286, 97.454666]
    * mean Fstar = 96.77989
    * argmax: m = 6 argx= [[-1.586308   1.6438746]] info gain = [7.7486038e-07 6.1988831e-06 4.7683716e-07 4.7683716e-07 2.1457672e-06
 1.5687943e-04 3.9677143e-02 7.1525574e-07 5.9494972e-02 9.5367432e-07]
    * cost so far: 183.0
    * time spent = 6719.803495645523
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #18
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [96.12804, 99.715645, 96.34418, 100.48401, 95.51572, 99.70887, 95.7051, 96.79991, 96.6076, 99.590775]
    * mean Fstar = 97.65999
    * argmax: m = 4 argx= [[-1.6045779  1.6442987]] info gain = [1.0728836e-06 4.7683716e-07 5.9604645e-07 7.1525574e-07 2.8462172e-02
 4.7683716e-07 3.9693356e-02 3.5762787e-07 5.9494972e-02 1.1920929e-07]
    * cost so far: 185.0
    * time spent = 2340.274866104126
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #19
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [99.87597, 103.19317, 102.43769, 101.34386, 100.23076, 99.4643, 97.990425, 103.412155, 100.78708, 101.48268]
    * mean Fstar = 101.02181
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [9.4175339e-06 5.9604645e-07 3.5762787e-07 3.5762787e-07 4.7683716e-07
 5.9604645e-07 3.9643764e-02 1.1920929e-06 5.9494972e-02 8.4561503e-01]
    * cost so far: 192.0
    * time spent = 2277.1442704200745
    * debug = [55.60211264]
    * debug = [55.60211264]
  - iter #20
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [113.837234, 108.36186, 112.925125, 115.1366, 116.139946, 112.261765, 116.41614, 115.069084, 114.224976, 115.04228]
    * mean Fstar = 113.94149
    * argmax: m = 9 argx= [[-1.6045779 -2.2765594]] info gain = [1.2516975e-06 2.6226044e-06 3.5762787e-07 8.3446503e-07 3.5762787e-07
 7.1525574e-07 3.9679766e-02 2.3841858e-07 5.9494972e-02 2.7387512e-01]
    * cost so far: 199.0
    * time spent = 2566.2309622764587
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #21
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [110.640625, 111.48982, 108.19748, 108.73657, 109.86526, 111.661, 115.88176, 114.05469, 108.61653, 110.94364]
    * mean Fstar = 111.00874
    * argmax: m = 4 argx= [[-1.6045779  1.6442987]] info gain = [1.3113022e-06 5.9604645e-07 4.7683716e-07 4.7683716e-07 2.8462172e-02
 2.7775764e-04 3.9626122e-02 5.9604645e-07 5.9494972e-02 8.2492828e-05]
    * cost so far: 201.0
    * time spent = 2309.8035798072815
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #22
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [110.637054, 110.45402, 107.90307, 113.82875, 110.40025, 109.85771, 112.99826, 107.58228, 108.16194, 109.22085]
    * mean Fstar = 110.104416
    * argmax: m = 6 argx= [[-1.5904238  1.6434864]] info gain = [1.6689301e-06 5.9604645e-07 4.7683716e-07 5.9604645e-07 4.7683716e-07
 7.1525574e-07 3.9687872e-02 2.3841858e-07 5.9494972e-02 1.1920929e-07]
    * cost so far: 204.0
    * time spent = 2236.1066868305206
    * debug = [39.85211264]
    * debug = [39.85211264]
  - iter #23
    * simple optimum = [55.60211264]
    * infere optimum = [55.60211264]
    * Fstar = [109.37939, 110.48748, 109.44701, 113.758354, 109.14397, 112.80793, 109.43577, 112.47768, 110.62893, 112.40646]
    * mean Fstar = 110.99729
    * argmax: m = 6 argx= [[-1.6045779  1.6442987]] info gain = [1.1920929e-06 7.1525574e-07 2.6273727e-04 4.7683716e-07 7.1525574e-07
 7.1525574e-07 3.9626122e-02 8.3446503e-07 2.8422356e-02 0.0000000e+00]
    * cost so far: 207.0
    * time spent = 2243.497183084488

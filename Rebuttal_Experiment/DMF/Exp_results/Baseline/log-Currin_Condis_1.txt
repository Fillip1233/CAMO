=====================Starting experiment Currin_Condis trail#1=====================
Initialize BO on Currin_Condis
  - Global optimum = 13.79
  - Cost = [1. 1. 1. 1. 2. 3. 3. 5. 6. 7.]
  - Init cost = 90.0
    * debug = [3.00900129]
    * debug = [3.00900129]
  - iter #0
    * simple optimum = [3.00900129]
    * infere optimum = [3.009]
    * Fstar = [18.419962, 21.506264, 29.793255, 15.590217, 21.767159, 23.06439, 26.394865, 19.072807, 24.657108, 18.436165]
    * mean Fstar = 21.870218
    * argmax: m = 9 argx= [[-1.6045779 -2.2765594]] info gain = [0.0000000e+00 2.3841858e-07 1.1920929e-07 1.1920929e-07 1.7881393e-06
 1.7881393e-07 9.9420547e-05 2.9802322e-07 4.1112900e-02 5.9847391e-01]
    * cost so far: 97.0
    * time spent = 2320.211845636368
    * debug = [1.18959432]
    * debug = [1.18959432]
  - iter #1
    * simple optimum = [3.00900129]
    * infere optimum = [1.18940802]
    * Fstar = [28.22768, 16.748611, 26.747786, 22.858448, 15.422085, 28.723516, 22.710865, 25.636923, 23.234539, 27.52019]
    * mean Fstar = 23.783062
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [2.3841858e-07 3.5762787e-07 1.1920929e-07 2.3841858e-07 2.2649765e-06
 4.7683716e-07 1.6927719e-05 1.1920929e-07 4.0670633e-02 7.9160047e-01]
    * cost so far: 104.0
    * time spent = 2557.038032054901
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #2
    * simple optimum = [3.00900129]
    * infere optimum = [3.009]
    * Fstar = [14.821564, 14.373962, 20.40911, 24.490112, 22.74945, 22.14891, 24.758936, 30.335218, 16.464329, 24.366291]
    * mean Fstar = 21.491787
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [5.9604645e-08 1.1920929e-07 1.7881393e-07 8.3446503e-07 2.3841858e-07
 1.1920929e-07 8.4638596e-06 1.1920929e-07 4.1111350e-02 7.9160047e-01]
    * cost so far: 111.0
    * time spent = 1988.3297019004822
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #3
    * simple optimum = [3.00900129]
    * infere optimum = [3.009]
    * Fstar = [13.783297, 27.314703, 18.06011, 19.611618, 14.375273, 16.260582, 19.720165, 24.134163, 16.291914, 14.812664]
    * mean Fstar = 18.436451
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [2.3841858e-07 1.1920929e-07 2.3841858e-07 4.7683716e-07 2.0265579e-06
 6.4373016e-06 7.3909760e-06 1.1920929e-07 4.0674090e-02 7.9160047e-01]
    * cost so far: 118.0
    * time spent = 1941.0019438266754
    * debug = [3.009]
    * debug = [3.009]
  - iter #4
    * simple optimum = [3.00900129]
    * infere optimum = [3.009]
    * Fstar = [10.505021, 11.878972, 11.17367, 8.6636, 13.603384, 9.650311, 11.512412, 11.500685, 12.725165, 9.038759]
    * mean Fstar = 11.025198
    * argmax: m = 9 argx= [[-1.6045779 -2.2765594]] info gain = [1.7881393e-07 1.9073486e-06 1.1920929e-07 2.3841858e-07 5.9604645e-08
 3.0994415e-06 4.0531158e-06 5.9604645e-08 4.2790532e-02 5.9847391e-01]
    * cost so far: 125.0
    * time spent = 1934.482571363449
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #5
    * simple optimum = [3.00900129]
    * infere optimum = [4.88399389]
    * Fstar = [9.6645, 9.5625305, 7.1157603, 9.354875, 6.9979424, 7.7947593, 7.6822543, 8.574966, 9.561536, 7.404512]
    * mean Fstar = 8.371364
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [2.3841858e-07 3.5762787e-07 4.7683716e-07 2.3841858e-07 1.1920929e-07
 1.5139580e-05 1.3351440e-05 1.1920929e-07 4.1112185e-02 7.9160047e-01]
    * cost so far: 132.0
    * time spent = 1949.280949831009
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #6
    * simple optimum = [3.00900129]
    * infere optimum = [9.99650096]
    * Fstar = [8.867185, 10.023889, 8.42949, 9.248363, 7.686701, 8.815429, 8.383984, 7.4743567, 10.309639, 8.434429]
    * mean Fstar = 8.767346
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [5.9604645e-08 2.3841858e-07 2.3841858e-07 7.1525574e-07 3.0994415e-06
 4.6491623e-06 7.0333481e-06 1.1920929e-07 4.3599010e-02 7.9160047e-01]
    * cost so far: 139.0
    * time spent = 1964.3825149536133
    * debug = [3.009]
    * debug = [3.009]
  - iter #7
    * simple optimum = [3.00900129]
    * infere optimum = [9.32269734]
    * Fstar = [5.896336, 6.3774843, 6.6248226, 6.458057, 7.526719, 5.509128, 5.250963, 5.894001, 5.0280247, 6.999977]
    * mean Fstar = 6.1565514
    * argmax: m = 9 argx= [[-1.6045779 -2.2765594]] info gain = [3.5762787e-07 7.1525574e-07 1.3113022e-06 1.7881393e-07 1.0967255e-05
 1.1920929e-07 1.7881393e-06 1.7881393e-07 4.1113257e-02 5.9847391e-01]
    * cost so far: 146.0
    * time spent = 1970.7244327068329
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #8
    * simple optimum = [3.00900129]
    * infere optimum = [6.85502678]
    * Fstar = [6.0366526, 9.096525, 7.082954, 7.604636, 7.4525113, 7.958076, 7.6489425, 6.187466, 8.247562, 7.7416334]
    * mean Fstar = 7.5056953
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [2.3841858e-07 5.9604645e-07 2.3841858e-07 7.1525574e-07 1.1920929e-07
 7.1525574e-07 1.4078617e-04 2.3841858e-07 4.1113257e-02 7.9160047e-01]
    * cost so far: 153.0
    * time spent = 2003.0262625217438
    * debug = [1.18940802]
    * debug = [1.18940802]
  - iter #9
    * simple optimum = [3.00900129]
    * infere optimum = [8.8449664]
    * Fstar = [11.826821, 11.337901, 8.750228, 9.131575, 12.611452, 9.653824, 9.448522, 11.55614, 9.175358, 10.402761]
    * mean Fstar = 10.389459
    * argmax: m = 9 argx= [[-1.6045779  1.6442987]] info gain = [2.3841858e-07 1.1920929e-07 1.1920929e-07 3.5762787e-07 1.1920929e-07
 1.1920929e-07 8.3446503e-07 2.3841858e-07 4.3596745e-02 7.9160047e-01]
    * cost so far: 160.0
    * time spent = 2006.1949858665466
 Finished trial, time spent = 422.2693462371826
